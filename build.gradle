/**
 * Copyright 2016 Yg0R2
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'war'

sourceCompatibility = 1.8
version = '0.0.1-SNAPSHOT'

// Load properties files

apply from: "gradle.properties "

def userProperties = new File ("gradle.${System.env.USERNAME}.properties")
if (userProperties.exists()) {
	apply from: {-> "${userProperties}"}
}

buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "com.athaydes.gradle.osgi:osgi-run-core:1.2"
	}
}

dependencies {
	compile 'commons-lang:commons-lang:latest.release'

	providedCompile 'javax.servlet:servlet-api:latest.release'

	// Spring
	compile 'org.springframework:spring-core:latest.release'
	compile 'org.springframework:spring-beans:latest.release'
	compile 'org.springframework:spring-context:latest.release'
	compile 'org.springframework:spring-web:latest.release'
	compile 'org.springframework:spring-webmvc:latest.release'

	// Jodd
	compile 'org.jodd:jodd-bean:latest.release'
	compile 'org.jodd:jodd-proxetta:latest.release'

	// Log
	compile 'org.slf4j:slf4j-api:latest.release'
	compile 'org.slf4j:slf4j-log4j12:latest.release'
	compile 'log4j:log4j:latest.release'

	// Test
	compile 'com.google.guava:guava:latest.release'
	testCompile 'junit:junit:latest.release'
	testCompile 'org.testng:testng:latest.release'
	testCompile 'org.mockito:mockito-all:latest.release'
	testCompile 'org.powermock:powermock-api-mockito:latest.release'
	testCompile 'org.powermock:powermock-module-junit4:latest.release'
}

jar {
	manifest {
		name = 'DataManipulator'

		instruction 'Private-Package','yg0r2.dm.*'
		instruction 'Bundle-Vendor', 'Yg02'
		instruction 'Bundle-Description', 'Generate data into Liferay portal'
		instruction 'Import-Package', '!*,com.liferay.portal.kernel.portlet.bridges.mvc;version="[1.0,2)",javax.portlet;version="[2.0,3)",javax.servlet,javax.servlet.http'
		instruction 'Export-Package', 'yg0r2.dm.mvc;version="' + version + '"'
	}
}

repositories {
	jcenter()
}

war {
	archiveName 'DataManipulator.war'

	// Have to "clean" the classpath first
	classpath = jar
	classpath configurations.compile

	manifest {
		attributes 'Implementation-Title': 'Data Manipulator', 'Implementation-Version': version
	}
}

task all(dependsOn: [clean, tasks.war, 'deploy']) << {
}

task deploy(dependsOn: tasks.war) << {
	copy {
		from "build/libs"
		into "${appServerDeployDir}"
		include "*.war"
	}
}
